{% extends 'base.html.twig' %}

{% block title %}{{ 'my_cart'|trans({}, 'messages', app.request.locale) }}{% endblock %}

{% block body %}
    <section class="bg-dark py-5">
        <div class="container px-4 px-lg-5 my-5">
            <div class="text-center text-white">
                <!-- Titre principal -->
                <h1 class="display-4 fw-bolder">{{ 'my_cart'|trans({}, 'messages', app.request.locale) }}</h1>
                <!-- Phrase d'accroche -->
                <p class="lead fw-normal text-white-50 mb-0">{{ 'what_you_order'|trans({}, 'messages', app.request.locale) }}</p>
            </div>
        </div>
    </section>

    <section class="py-5">
        <div class="container">
            <!-- Boucle pour afficher les messages flash -->
            {% for label, messages in app.flashes(['success', 'warning', 'danger']) %}
                {% for message in messages %}
                    <div class="alert alert-{{ label }} mt-4" role="alert">
                        {{ message }}
                    </div>
                {% endfor %}
            {% endfor %}

            <!-- Si le panier est vide, affiche un message -->
            {% if articlesPanier is empty %}
                <p class="text-center">{{ 'your_cart_is_empty'|trans({}, 'messages', app.request.locale) }}</p>
            {% else %}
                <!-- Si le panier contient des articles, afficher un tableau listant ces derniers. -->
                <table id="dataTable" class="table">
                    <thead>
                        <tr>
                            <th scope="col">{{ 'article_photo'|trans({}, 'messages', app.request.locale) }}</th>
                            <th scope="col">{{ 'product_name'|trans({}, 'messages', app.request.locale) }}</th>
                            <td scope="col">{{ 'unit_price'|trans({}, 'messages', app.request.locale) }}</td>
                            <th scope="col">{{ 'quantity'|trans({}, 'messages', app.request.locale) }}</th>
                            <th scope="col">{{ 'total_price'|trans({}, 'messages', app.request.locale) }}</th>
                            <th scope="col">{{ 'actions'|trans({}, 'messages', app.request.locale) }}</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Boucle pour afficher chaque article dans une ligne du tableau -->
                        {% for item in articlesPanier %}
                             <!-- Formulaire pour supprimer ou modifier un article du panier -->
                            {{ form_start(item.suppressionArticlePanierForm, {'attr': {'id': item.article.id}}) }}
                                <tr>
                                    <!-- Colonne avec la photo de l'article -->
                                    <td><img src="{{ imagesArticlesPath }}/{{ item.article.photoArticle }}" alt="{{ item.article.titre }}" class="img-thumbail"></td>
                                    <td>{{ item.article.titre }}</td>
                                    <!-- Colonne avec le titre de l'article -->
                                    <td>{{ item.article.prixUnitaire }}</td>
                                    <!-- Colonne avec le prix unitaire de l'article -->
                                    <td>{{ form_widget(item.suppressionArticlePanierForm.quantite) }}</td>
                                    <!-- Colonne avec l'action pour supprimer l'article du panier -->
                                    <td>{{ item.prix_total }}&euro;</td>
                                    <td>{{ form_widget(item.suppressionArticlePanierForm.suppression_panier) }}</td>
                                </tr>
                            {{ form_end(item.suppressionArticlePanierForm) }}
                        {% endfor %}
                    </tbody>
                    <!-- Pied de tableau affichant les totaux : quantit√© totale et prix total -->
                    <tfoot>
                        <tr>
                            <td colspan="3">{{ 'total'|trans({}, 'messages', app.request.locale) }}</td>
                            <td>{{ quantiteTotale }}</td>
                            <td colspan="2">{{ total }}&euro; </td>
                        </tr>
                        <tr>
                            <td colspan="3">{{ 'delivery'|trans({}, 'messages', app.request.locale) }}</td>
                            <td>1</td>
                            <td colspan="2">{{ fraisLivraison }}&euro;</td>
                        </tr>
                        <tr>
                            <td colspan="3">{{ 'total_with_shipping'|trans({}, 'messages', app.request.locale) }}</td>
                            <td></td>
                            <td colspan="2">{{ totalAvecFrais }}&euro;</td>
                        </tr>
                    </tfoot>
                </table>

                <div class="d-flex flex-column justify-content-end align-items-end">
                    <div class="form-check mb-3">
                        <input type="checkbox" id="termsCheck" name="termsCheck" class="form-check-input" aria-checked="false">
                        <label class="form-check-label" for="termsCheck">
                            {{ 'accepted_payment'|trans({}, 'messages', app.request.locale) }}
                            <a href="{{ path('condition.index') }}" target="_blank">{{ 'terms_conditions_link'|trans({}, 'messages', app.request.locale) }}</a>
                        </label>
                    </div>
                    <div class="form-group">
                        <!-- Le bouton de paiement est d√©sactiv√© par d√©faut -->
                        <button id="checkout-button" class="btn btn-primary" disabled aria-disabled="true">
                            <span class="bi bi-cart-fill" aria-hidden="true"></span> {{ 'pay'|trans({}, 'messages', app.request.locale) }}
                        </button>
                    </div>

                    <p>üõç {{ 'free_returns'|trans({}, 'messages', app.request.locale) }}</p>
                    
                    <p>üöö {{ 'delivery_fee'|trans({}, 'messages', app.request.locale) }}</p>
                    
                    <p>üîí {{ 'secure_payment'|trans({}, 'messages', app.request.locale) }}</p>
                    
                    <p>üí∂ {{ 'prices_inclusive_of_vat'|trans({}, 'messages', app.request.locale) }}</p>
                </div>
            {% endif %}
        </div>
    </section>

    <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
        <div class="text-center">
            <!-- Bouton pour retourner √† la liste des produits -->
            <a class="btn btn-outline-dark mt-auto" href="{{ path('produits.list') }}">{{ 'product_list'|trans({}, 'messages', app.request.locale) }}</a>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <!-- Inclusion de la biblioth√®que Stripe pour g√©rer le paiement -->
    <script src="https://js.stripe.com/v3/"></script>

    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', () => {
            // Initialisation de Stripe avec la cl√© publique fournie par le serveur.
            let stripe = Stripe("{{ stripe_public }}");

            // R√©cup√©ration de l'√©l√©ment bouton avec l'ID 'checkout-button' (le bouton de paiement)
            let checkoutButton = document.getElementById('checkout-button');
            let termsCheck = document.getElementById('termsCheck');

            // Fonction pour activer ou d√©sactiver le bouton de paiement en fonction de la case √† cocher.
            termsCheck.addEventListener('change', () => {
                checkoutButton.disabled = !termsCheck.checked; // Active le bouton si la case est coch√©e.
            });

            // Ajout d'un √©couteur d'√©v√©nement 'click' sur le bouton de paiement.
            checkoutButton.addEventListener('click', () => {
                // Lorsque l'utilisateur clique sur le bouton, on fait un appel POST vers la route 'stripe_checkout' pour obtenir une session Stripe.
                fetch("{{ path('stripe_checkout') }}", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json', // Sp√©cifie que l'on envoie du JSON au serveur.
                    },
                })
                // Le serveur renvoie une r√©ponse que l'on convertit en JSON
                .then((response) => {
                    return response.json();
                })
                // Une fois que la session Stripe est obtenue, on redirige l'utilisateur vers la page de paiement de Stripe en utilisant l'ID de la session.
                .then((session) => {
                    return stripe.redirectToCheckout({ sessionId: session.id });
                })
                // Si la redirection vers Stripe √©choue, on affiche une alerte avec l'erreur.
                .then((result) => {
                    if (result.error) {
                        alert(result.error.message);
                    }
                })
                // Si une erreur survient lors de l'appel au serveur ou dans la logique, elle est captur√©e et affich√©e dans la console.
                .catch((error) => {
                    console.error('Error :', error);
                });
            });
        });
    </script>
{% endblock %}
